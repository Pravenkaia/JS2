!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);new Vue({el:"#app",components:{cart:{data:()=>({cartitems:[],img:"https://placehold.it/50x100",cartUrl:"/api/cart",addCartUrl:"/addToBasket.json",actionCart:"/api/cart/",error:"",showCart:!1,cartAmount:0,cartQuantity:0}),components:{"cart-item":{props:["cartitem","img"],methods:{disabled:t=>1===t?"buy-btn disabled-button":"buy-btn"},mounted(){this.disabled()},template:'<div class="card">\n                        <img \n                            :src="img" \n                            :alt=cartitem.product_name :title=cartitem.product_name>\n                        <div class="desc">\n                            <h3> {{ cartitem.product_name }} </h3>\n                            <p> {{ cartitem.price }} </p>\n                            <p> {{ cartitem.quantity }} </p>\n                            <p> {{ cartitem.quantity*cartitem.price }} </p>\n                            <button type="button" @click="$emit(\'add\', cartitem)" class="buy-btn">+</button>\n                            <button @click="$emit(\'minus\', cartitem)" :class=disabled(cartitem.quantity)>-</button>\n                            <button  @click="$emit(\'del\', cartitem)">Del</button>\n                        </div>\n                </div>'}},getCartQuantity(){return this.cartQuantity},toggleShowCart(){return!this.showCart},methods:{add(t){let e=this.cartitems.find(e=>e.id_product===t.id_product);if(e)this.$parent.putJson(`${this.actionCart}${e.id_product}`,{action:"plus",product:e}).then(t=>{t.result&&(e.quantity++,this.calcCountGoods(),this.calcAmount())});else{let e=Object.assign({quantity:1},t);this.$parent.postJson(`${this.actionCart}`,{product:e}).then(t=>{t.result&&(this.cartitems.push(e),this.calcCountGoods(),this.calcAmount())})}},minus(t){let e=this.cartitems.find(e=>e.id_product===t.id_product);e&&this.$parent.putJson(`${this.actionCart}${e.id_product}`,{action:"minus",product:t}).then(t=>{t.result&&(e.quantity--,this.calcCountGoods(),this.calcAmount())})},del(t){this.$parent.delJson(`${this.actionCart}`,{product:t}).then(e=>{e.result&&(this.cartitems.splice(this.cartitems.indexOf(t),1),this.calcCountGoods(),this.calcAmount())})},calcCountGoods(){return this.cartQuantity=this.cartitems.reduce((t,e)=>t+ +e.quantity,0),this.cartQuantity},calcAmount(){return this.cartAmount=this.cartitems.reduce((t,e)=>t+ +e.quantity*+e.price,0),this.cartAmount},toggleCart(){this.showCart=!this.showCart}},mounted(){this.$parent.getJson(this.cartUrl).then(t=>{this.cartitems=t.contents,this.cartAmount=t.amount,this.calcCountGoods(),console.dir(this.cartitems),console.log(t.amount),console.log(this.cartQuantity)})},template:'<div>\n   \x3c!--Кнопка корзины товаров--\x3e\n    <button ref="cart" @click="showCart = !showCart" class="cart-button btn btn-default btn-lg " type="button" id="open-cart-window"><i class="fas fa-cart-arrow-down"></i>&nbsp;<span id="cart-item-number">{{ cartQuantity }}</span>\n    </button>\n    <!======================--\x3e\n\n    \x3c!--внешнее модальное окно --\x3e\n    <div v-show="showCart" id="cart-window" class="modal-window">\n\n        <div class="modal-dialog modal-lg">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <h5 class="modal-title">Ваши товары в корзине</h5>\n                    <button @click="showCart = !showCart" type="button" class="close close-cart-window" data-dismiss="modal" id="close-cart-window">\n                        <i class="fas fa-times close-cart-window"></i>\n                    </button>\n                </div>\n\n\n                <div class="modal-body">\n                    <div v-if="cartitems.length" class="row">\n\n                        <cart-item v-for="cartitem of cartitems" :key="cartitem.id_product" :img="img" :cartitem="cartitem" @add="add" @minus="minus" @del="del"></cart-item>\n                    </div>\n\n                    <error-ajax v-else-if="error" :error="error" class="modal-body"></error-ajax>\n\n                    <div v-else class="modal-body">\n                        <h3>Нет данных!</h3>\n                    </div>\n                </div>\n                <div class="modal-footer">\n                    <button @click="showCart = !showCart" type="button" class="btn btn-secondary close-cart-window" data-dismiss="modal">Закрыть</button>\n                    <button type="button" class="btn btn-primary">Оформить покупку</button>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n    \x3c!--внешнее модальное окно --\x3e\n\n</div>'},products:{data:()=>({filteredProducts:[],products:[],img:"https://placehold.it/200x150",catalogUrl:"/api/products"}),components:{product:{props:["product","img"],template:'<div class="card">\n                        <img class="card-img-top" :src="img" :alt=product.product_name :title=product.product_name>\n                        <div class="desc">\n                            <h3> {{ product.product_name }} </h3>\n                            <p> {{ product.price }} </p>\n                            <button type="button" class="btn btn-warning add-to-cart" @click="$root.$refs.cart.add(product)">Добавить в корзину</button>\n                        </div>\n                </div>\n'}},methods:{setInitialFilteredProducts(){this.filteredProducts=this.products},FilterGoods(t){if(t){let e=new RegExp(t,"i");this.filteredProducts=this.products.filter(t=>{if(e.test(t.product_name))return console.log(t.product_name),t})}}},mounted(){this.$parent.getJson(this.catalogUrl).then(t=>{for(let e of t)this.products.push(e),this.setInitialFilteredProducts()})},template:'<div class="container fluid">\n                    <div v-if="filteredProducts.length" class="products row align-items-start justify-content-center" id="products">\n\n                        <product \n                        class="product-item" \n                        v-for="product of filteredProducts"\n                        :key="product.id_product"\n                        :img="img"\n                        :product="product">\n                        </product>\n                    </div>\n\n                    \n\n                    <div v-else class="empty">\n                        <h3>Нет данных</h3>\n                    </div>\n                </div>'},error:{data:()=>({erroMessage:""}),methods:{setError(t){this.erroMessage=t}},template:'<div class="error" v-if="erroMessage">\n<div><button @click="erroMessage = \'\'" type="button" class="close">\n                        <i class="fas fa-times"></i>\n                    </button>\n</div>\n\n                    <div> {{ erroMessage }} </div>\n\n\n\n</div>'},search:{data:()=>({searchLine:""}),template:'<div>\n    <form action="#" @submit.prevent=\'$parent.$refs.products.FilterGoods(searchLine)\'>\n\n        <button type="submit" aria-label="Поиск по списку товаров"><i class="fas fa-search" aria-label="Поиск по списку товаров"></i></button>\n        \n        <input v-model="searchLine" type="text" placeholder="Search" aria-label="Search">\n\n    </form></div>'}},methods:{getJson(t){return fetch(t).then(t=>t.json()).catch(t=>{this.$refs.error.setError(t),console.log(t)})},postJson(t,e){return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(t=>t.json()).catch(t=>{this.$refs.error.setError(t),console.log(t)})},putJson(t,e){return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(t=>t.json()).catch(t=>{this.$refs.error.setError(t),console.log(t)})},delJson(t,e){return fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(t=>t.json()).catch(t=>{this.$refs.error.setError(t),console.log(t)})}}})}]);